@using System.Web.Mvc.Html
@model FileBox.Web.ViewModels.UserInfoMapModel

@section main{
<h3>Edit @Model.Login's info</h3>
<hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal center-block" style="width:60%">
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            @Html.HiddenFor(m => m.UserInfoID)

            <div class="form-group">
                @Html.Label("First name", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Last name", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Email", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control", @readonly="readonly"}})
                    @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Login", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Login, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Login, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Password", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.PasswordFor(model => model.Password, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.Label("User created", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.WasCreated, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
                    @Html.ValidationMessageFor(model => model.WasCreated, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.Label("User role", htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.UserRoleID, (SelectList) ViewBag.Roles, new{@class="form-control"})
                    @Html.ValidationMessageFor(model => model.UserRole, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-3 col-md-9">
                    <input type="submit" value="Save" class="btn btn-default"/>
                </div>
            </div>
        </div>
    }

    <div>
        <span class="glyphicon glyphicon-chevron-left"></span>@Html.ActionLink("Back to List", "Index")
    </div>
}
@section scripts
{
    <script type="text/javascript">$.validator.methods["date"] = function (value, element) { return true; }</script>
}